=begin
#OpenAPI Documentation for Ejabberd HTTP APIs

#APIs for managing Ejabberd server

The version of the OpenAPI document: 1.0.0


OpenAPI Generator version: 7.0.1

=end

require 'spec_helper'
require 'json'

# Unit tests for EjabberdHttpClient::VcardApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'VcardApi' do
  before do
    # run before each test
    @api_instance = EjabberdHttpClient::VcardApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of VcardApi' do
    it 'should create an instance of VcardApi' do
      expect(@api_instance).to be_instance_of(EjabberdHttpClient::VcardApi)
    end
  end

  # unit tests for get_vcard
  # Get content from a vCard field.
  # @param get_vcard_request
  # @param [Hash] opts the optional parameters
  # @return [GetVcard200Response]
  describe 'get_vcard test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_vcard2
  # Get content from a vCard subfield.
  # @param get_vcard2_request
  # @param [Hash] opts the optional parameters
  # @return [GetVcard200Response]
  describe 'get_vcard2 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_vcard2_multi
  # Get multiple contents from a vCard field.
  # @param get_vcard2_multi_request
  # @param [Hash] opts the optional parameters
  # @return [Array<String>]
  describe 'get_vcard2_multi test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for set_nickname
  # Set nickname in a user&#39;s vCard.
  # @param [Hash] opts the optional parameters
  # @option opts [SetNicknameRequest] :set_nickname_request
  # @return [Integer]
  describe 'set_nickname test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for set_vcard
  # Set content in a vCard field.
  # @param [Hash] opts the optional parameters
  # @option opts [SetVcardRequest] :set_vcard_request
  # @return [Integer]
  describe 'set_vcard test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for set_vcard2
  # Set content in a vCard subfield.
  # @param [Hash] opts the optional parameters
  # @option opts [SetVcard2Request] :set_vcard2_request
  # @return [Integer]
  describe 'set_vcard2 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for set_vcard2_multi
  # Set multiple contents in a vCard subfield.
  # @param [Hash] opts the optional parameters
  # @option opts [SetVcard2MultiRequest] :set_vcard2_multi_request
  # @return [Integer]
  describe 'set_vcard2_multi test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
