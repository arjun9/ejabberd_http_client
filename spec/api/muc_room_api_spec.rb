=begin
#OpenAPI Documentation for Ejabberd HTTP APIs

#APIs for managing Ejabberd server

The version of the OpenAPI document: 1.0.0


OpenAPI Generator version: 7.0.1

=end

require 'spec_helper'
require 'json'

# Unit tests for EjabberdHttpClient::MucRoomApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'MucRoomApi' do
  before do
    # run before each test
    @api_instance = EjabberdHttpClient::MucRoomApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of MucRoomApi' do
    it 'should create an instance of MucRoomApi' do
      expect(@api_instance).to be_instance_of(EjabberdHttpClient::MucRoomApi)
    end
  end

  # unit tests for change_room_option
  # Change an option in a MUC room.
  # @param change_room_option_request
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'change_room_option test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_room
  # Create a MUC room using name@service in the given host.
  # @param create_room_request
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'create_room test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_room_with_options
  # Create a MUC room using name@service in the given host with specific options.
  # @param create_room_with_options_request
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'create_room_with_options test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_room_affiliation
  # Get affiliation of a user in MUC room.
  # @param get_room_affiliation_request
  # @param [Hash] opts the optional parameters
  # @return [GetRoomAffiliation200Response]
  describe 'get_room_affiliation test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_room_affiliations
  # Get the list of affiliations of a MUC room.
  # @param get_room_affiliations_request
  # @param [Hash] opts the optional parameters
  # @return [Array<GetRoomAffiliations200ResponseInner>]
  describe 'get_room_affiliations test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_room_history
  # Get history of messages stored inside MUC room state.
  # @param get_room_affiliations_request
  # @param [Hash] opts the optional parameters
  # @return [Array<GetRoomHistory200ResponseInner>]
  describe 'get_room_history test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_room_occupants
  # Get the list of occupants of a MUC room.
  # @param get_room_affiliations_request
  # @param [Hash] opts the optional parameters
  # @return [Array<GetRoomOccupants200ResponseInner>]
  describe 'get_room_occupants test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_room_occupants_number
  # Get the number of occupants of a MUC room.
  # @param get_room_affiliations_request
  # @param [Hash] opts the optional parameters
  # @return [GetRoomOccupantsNumber200Response]
  describe 'get_room_occupants_number test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_room_options
  # Get options from a MUC room.
  # @param get_room_affiliations_request
  # @param [Hash] opts the optional parameters
  # @return [Array<GetRoomOptions200ResponseInner>]
  describe 'get_room_options test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_subscribers
  # List subscribers of a MUC conference.
  # @param get_room_affiliations_request
  # @param [Hash] opts the optional parameters
  # @return [Array<String>]
  describe 'get_subscribers test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for send_direct_invitation
  # Send a direct invitation to several destinations.
  # @param [Hash] opts the optional parameters
  # @option opts [SendDirectInvitationRequest] :send_direct_invitation_request
  # @return [Integer]
  describe 'send_direct_invitation test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for set_room_affiliation
  # Change an affiliation in a MUC room.
  # @param [Hash] opts the optional parameters
  # @option opts [SetRoomAffiliationRequest] :set_room_affiliation_request
  # @return [Integer]
  describe 'set_room_affiliation test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for subscribe_to_room
  # Subscribe to a MUC conference.
  # @param [Hash] opts the optional parameters
  # @option opts [SubscribeToRoomRequest] :subscribe_to_room_request
  # @return [Array<String>]
  describe 'subscribe_to_room test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for subscribe_to_room_many
  # Subscribe several users to a MUC conference.
  # @param [Hash] opts the optional parameters
  # @option opts [SubscribeToRoomManyRequest] :subscribe_to_room_many_request
  # @return [Integer]
  describe 'subscribe_to_room_many test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for unsubscribe_from_room
  # Unsubscribe from a MUC conference.
  # @param [Hash] opts the optional parameters
  # @option opts [UnsubscribeFromRoomRequest] :unsubscribe_from_room_request
  # @return [Integer]
  describe 'unsubscribe_from_room test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
