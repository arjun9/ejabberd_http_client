=begin
#OpenAPI Documentation for Ejabberd HTTP APIs

#APIs for managing Ejabberd server

The version of the OpenAPI document: 1.0.0


OpenAPI Generator version: 7.0.1

=end

require 'spec_helper'
require 'json'

# Unit tests for EjabberdHttpClient::LogsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'LogsApi' do
  before do
    # run before each test
    @api_instance = EjabberdHttpClient::LogsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of LogsApi' do
    it 'should create an instance of LogsApi' do
      expect(@api_instance).to be_instance_of(EjabberdHttpClient::LogsApi)
    end
  end

  # unit tests for get_loglevel
  # Get the current log level.
  # @param [Hash] opts the optional parameters
  # @return [GetLoglevel200Response]
  describe 'get_loglevel test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for reopen_log
  # Reopen the log files after being renamed.
  # @param [Hash] opts the optional parameters
  # @return [Integer]
  describe 'reopen_log test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for rotate_log
  # Rotate the log files.
  # @param [Hash] opts the optional parameters
  # @return [Integer]
  describe 'rotate_log test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for set_loglevel
  # Set the loglevel.
  # @param [Hash] opts the optional parameters
  # @option opts [SetLoglevelRequest] :set_loglevel_request
  # @return [Integer]
  describe 'set_loglevel test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
