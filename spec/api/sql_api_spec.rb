=begin
#OpenAPI Documentation for Ejabberd HTTP APIs

#APIs for managing Ejabberd server

The version of the OpenAPI document: 1.0.0


OpenAPI Generator version: 7.0.1

=end

require 'spec_helper'
require 'json'

# Unit tests for EjabberdHttpClient::SqlApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SqlApi' do
  before do
    # run before each test
    @api_instance = EjabberdHttpClient::SqlApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SqlApi' do
    it 'should create an instance of SqlApi' do
      expect(@api_instance).to be_instance_of(EjabberdHttpClient::SqlApi)
    end
  end

  # unit tests for convert_to_scram
  # Convert the passwords of users to SCRAM for a given vhost.
  # @param convert_to_scram_request
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'convert_to_scram test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for import_prosody
  # Import data from Prosody.
  # @param import_prosody_request
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'import_prosody test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_sql
  # Convert MS SQL, MySQL, or PostgreSQL DB to the new format.
  # @param [Hash] opts the optional parameters
  # @return [Integer]
  describe 'update_sql test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
