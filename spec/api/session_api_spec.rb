=begin
#OpenAPI Documentation for Ejabberd HTTP APIs

#APIs for managing Ejabberd server

The version of the OpenAPI document: 1.0.0


OpenAPI Generator version: 7.0.1

=end

require 'spec_helper'
require 'json'

# Unit tests for EjabberdHttpClient::SessionApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SessionApi' do
  before do
    # run before each test
    @api_instance = EjabberdHttpClient::SessionApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SessionApi' do
    it 'should create an instance of SessionApi' do
      expect(@api_instance).to be_instance_of(EjabberdHttpClient::SessionApi)
    end
  end

  # unit tests for connected_users
  # List all established user sessions.
  # @param [Hash] opts the optional parameters
  # @return [Array<String>]
  describe 'connected_users test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for connected_users_info
  # List all established sessions and their information.
  # @param [Hash] opts the optional parameters
  # @return [Array<ConnectedUsersInfo200ResponseInner>]
  describe 'connected_users_info test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for connected_users_number
  # Get the number of established sessions.
  # @param [Hash] opts the optional parameters
  # @return [ConnectedUsersNumber200Response]
  describe 'connected_users_number test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for connected_users_v_host
  # Get the list of established sessions in a vhost.
  # @param connected_users_v_host_request
  # @param [Hash] opts the optional parameters
  # @return [Array<String>]
  describe 'connected_users_v_host test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_num_resources
  # Get the number of resources of a user.
  # @param get_last_request
  # @param [Hash] opts the optional parameters
  # @return [GetNumResources200Response]
  describe 'get_num_resources test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_presence
  # Retrieve the resource with highest priority, and its presence for a given user.
  # @param get_last_request
  # @param [Hash] opts the optional parameters
  # @return [GetPresence200Response]
  describe 'get_presence test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_status_list
  # List of logged users with this status.
  # @param [Hash] opts the optional parameters
  # @option opts [GetStatusListRequest] :get_status_list_request
  # @return [Array<GetStatusList200ResponseInner>]
  describe 'get_status_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_status_list_host
  # List of users logged in host with their statuses.
  # @param [Hash] opts the optional parameters
  # @option opts [GetStatusListHostRequest] :get_status_list_host_request
  # @return [Array<GetStatusList200ResponseInner>]
  describe 'get_status_list_host test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_status_num
  # Number of logged users with a specific status.
  # @param [Hash] opts the optional parameters
  # @option opts [GetStatusListRequest] :get_status_list_request
  # @return [GetStatusNum200Response]
  describe 'get_status_num test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_status_num_host
  # Number of logged users with a specific status in a host.
  # @param [Hash] opts the optional parameters
  # @option opts [GetStatusListHostRequest] :get_status_list_host_request
  # @return [GetStatusNum200Response]
  describe 'get_status_num_host test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_user_sessions_info
  # Get information about all sessions of a user.
  # @param [Hash] opts the optional parameters
  # @option opts [GetLastRequest] :get_last_request
  # @return [Array<GetUserSessionsInfo200ResponseInner>]
  describe 'get_user_sessions_info test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for kick_session
  # Kick a user session.
  # @param kick_session_request
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'kick_session test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for kick_user
  # Disconnect user&#39;s active sessions.
  # @param get_last_request
  # @param [Hash] opts the optional parameters
  # @return [KickUser200Response]
  describe 'kick_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_user_resources
  # List a user&#39;s connected resources.
  # @param [Hash] opts the optional parameters
  # @option opts [GetLastRequest] :get_last_request
  # @return [Array<String>]
  describe 'list_user_resources test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for resource_num
  # Resource string of a session number.
  # @param [Hash] opts the optional parameters
  # @option opts [ResourceNumRequest] :resource_num_request
  # @return [ResourceNum200Response]
  describe 'resource_num test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for set_presence
  # Set presence of a session.
  # @param [Hash] opts the optional parameters
  # @option opts [SetPresenceRequest] :set_presence_request
  # @return [Integer]
  describe 'set_presence test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
