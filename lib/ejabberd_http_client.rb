=begin
#OpenAPI Documentation for Ejabberd HTTP APIs

#APIs for managing Ejabberd server

The version of the OpenAPI document: 1.0.0


OpenAPI Generator version: 7.0.1

=end

# Common files
require 'ejabberd_http_client/api_client'
require 'ejabberd_http_client/api_error'
require 'ejabberd_http_client/version'
require 'ejabberd_http_client/configuration'

# Models
require 'ejabberd_http_client/models/abort_delete_old_mam_messages200_response'
require 'ejabberd_http_client/models/abort_delete_old_mam_messages_request'
require 'ejabberd_http_client/models/add_o_auth_client_implicit_request'
require 'ejabberd_http_client/models/add_o_auth_client_password_request'
require 'ejabberd_http_client/models/add_roster_item_request'
require 'ejabberd_http_client/models/backup_request'
require 'ejabberd_http_client/models/ban_account_request'
require 'ejabberd_http_client/models/bookmarks_to_pep_request'
require 'ejabberd_http_client/models/change_node_name_request'
require 'ejabberd_http_client/models/change_password_request'
require 'ejabberd_http_client/models/change_room_option_request'
require 'ejabberd_http_client/models/check_account_request'
require 'ejabberd_http_client/models/check_module_request'
require 'ejabberd_http_client/models/check_password_hash_request'
require 'ejabberd_http_client/models/check_password_request'
require 'ejabberd_http_client/models/compile_request'
require 'ejabberd_http_client/models/connected_users_info200_response_inner'
require 'ejabberd_http_client/models/connected_users_number200_response'
require 'ejabberd_http_client/models/connected_users_v_host_request'
require 'ejabberd_http_client/models/convert_to_scram_request'
require 'ejabberd_http_client/models/convert_to_yaml_request'
require 'ejabberd_http_client/models/create_room_request'
require 'ejabberd_http_client/models/create_room_with_options_request'
require 'ejabberd_http_client/models/create_room_with_options_request_options_inner'
require 'ejabberd_http_client/models/create_rooms_file_request'
require 'ejabberd_http_client/models/delete_mnesia_request'
require 'ejabberd_http_client/models/delete_old_mam_messages_batch_request'
require 'ejabberd_http_client/models/delete_old_mam_messages_request'
require 'ejabberd_http_client/models/delete_old_mam_messages_status_request'
require 'ejabberd_http_client/models/delete_old_messages_batch_request'
require 'ejabberd_http_client/models/delete_old_messages_request'
require 'ejabberd_http_client/models/delete_old_pubsub_items_request'
require 'ejabberd_http_client/models/delete_old_users_request'
require 'ejabberd_http_client/models/dump_config_request'
require 'ejabberd_http_client/models/dump_request'
require 'ejabberd_http_client/models/dump_table_request'
require 'ejabberd_http_client/models/export2sql_request'
require 'ejabberd_http_client/models/export_piefxis_host_request'
require 'ejabberd_http_client/models/export_piefxis_request'
require 'ejabberd_http_client/models/gen_html_doc_for_commands_request'
require 'ejabberd_http_client/models/gen_markdown_doc_for_tags_request'
require 'ejabberd_http_client/models/get_cookie200_response'
require 'ejabberd_http_client/models/get_last200_response'
require 'ejabberd_http_client/models/get_last_request'
require 'ejabberd_http_client/models/get_loglevel200_response'
require 'ejabberd_http_client/models/get_num_resources200_response'
require 'ejabberd_http_client/models/get_offline_count200_response'
require 'ejabberd_http_client/models/get_offline_count_request'
require 'ejabberd_http_client/models/get_outgoing_s2s_number200_response'
require 'ejabberd_http_client/models/get_presence200_response'
require 'ejabberd_http_client/models/get_room_affiliation200_response'
require 'ejabberd_http_client/models/get_room_affiliation_request'
require 'ejabberd_http_client/models/get_room_affiliations200_response_inner'
require 'ejabberd_http_client/models/get_room_affiliations_request'
require 'ejabberd_http_client/models/get_room_history200_response_inner'
require 'ejabberd_http_client/models/get_room_occupants200_response_inner'
require 'ejabberd_http_client/models/get_room_occupants_number200_response'
require 'ejabberd_http_client/models/get_room_options200_response_inner'
require 'ejabberd_http_client/models/get_roster200_response_inner'
require 'ejabberd_http_client/models/get_stats200_response'
require 'ejabberd_http_client/models/get_stats_host_request'
require 'ejabberd_http_client/models/get_stats_request'
require 'ejabberd_http_client/models/get_status_list200_response_inner'
require 'ejabberd_http_client/models/get_status_list_host_request'
require 'ejabberd_http_client/models/get_status_list_request'
require 'ejabberd_http_client/models/get_status_num200_response'
require 'ejabberd_http_client/models/get_user_rooms_request'
require 'ejabberd_http_client/models/get_user_sessions_info200_response_inner'
require 'ejabberd_http_client/models/get_user_subscriptions200_response_inner'
require 'ejabberd_http_client/models/get_vcard200_response'
require 'ejabberd_http_client/models/get_vcard2_multi_request'
require 'ejabberd_http_client/models/get_vcard2_request'
require 'ejabberd_http_client/models/get_vcard_request'
require 'ejabberd_http_client/models/import_dir200_response'
require 'ejabberd_http_client/models/import_dir_request'
require 'ejabberd_http_client/models/import_file_request'
require 'ejabberd_http_client/models/import_piefxis_request'
require 'ejabberd_http_client/models/import_prosody_request'
require 'ejabberd_http_client/models/incoming_s2s_number200_response'
require 'ejabberd_http_client/models/install_fallback_request'
require 'ejabberd_http_client/models/issue_o_auth_token200_response'
require 'ejabberd_http_client/models/issue_o_auth_token_request'
require 'ejabberd_http_client/models/join_cluster_request'
require 'ejabberd_http_client/models/kick_session_request'
require 'ejabberd_http_client/models/kick_user200_response'
require 'ejabberd_http_client/models/leave_cluster_request'
require 'ejabberd_http_client/models/list_certificates200_response_inner'
require 'ejabberd_http_client/models/list_muc_online_rooms_by_regex200_response_inner'
require 'ejabberd_http_client/models/list_muc_online_rooms_by_regex_request'
require 'ejabberd_http_client/models/list_muc_online_rooms_request'
require 'ejabberd_http_client/models/list_o_auth_tokens200_response_inner'
require 'ejabberd_http_client/models/load_database_request'
require 'ejabberd_http_client/models/privacy_set_request'
require 'ejabberd_http_client/models/private_get_request'
require 'ejabberd_http_client/models/private_set_request'
require 'ejabberd_http_client/models/process_roster_items200_response_inner'
require 'ejabberd_http_client/models/process_roster_items_request'
require 'ejabberd_http_client/models/push_all_to_all_request'
require 'ejabberd_http_client/models/push_roster_all_request'
require 'ejabberd_http_client/models/push_roster_request'
require 'ejabberd_http_client/models/register_muc_nick_request'
require 'ejabberd_http_client/models/register_request'
require 'ejabberd_http_client/models/registered_users_request'
require 'ejabberd_http_client/models/remove_mam_for_user_with_peer_request'
require 'ejabberd_http_client/models/remove_o_auth_client_request'
require 'ejabberd_http_client/models/request_certificate_request'
require 'ejabberd_http_client/models/resource_num200_response'
require 'ejabberd_http_client/models/resource_num_request'
require 'ejabberd_http_client/models/restart_module200_response'
require 'ejabberd_http_client/models/restart_module_request'
require 'ejabberd_http_client/models/restore_request'
require 'ejabberd_http_client/models/revoke_certificate_request'
require 'ejabberd_http_client/models/revoke_o_auth_token_request'
require 'ejabberd_http_client/models/rooms_empty_destroy_request'
require 'ejabberd_http_client/models/rooms_unused_destroy_request'
require 'ejabberd_http_client/models/send_direct_invitation_request'
require 'ejabberd_http_client/models/send_message_request'
require 'ejabberd_http_client/models/send_stanza_c2_s_request'
require 'ejabberd_http_client/models/send_stanza_request'
require 'ejabberd_http_client/models/set_last_request'
require 'ejabberd_http_client/models/set_loglevel_request'
require 'ejabberd_http_client/models/set_master_request'
require 'ejabberd_http_client/models/set_nickname_request'
require 'ejabberd_http_client/models/set_presence_request'
require 'ejabberd_http_client/models/set_room_affiliation_request'
require 'ejabberd_http_client/models/set_vcard2_multi_request'
require 'ejabberd_http_client/models/set_vcard2_request'
require 'ejabberd_http_client/models/set_vcard_request'
require 'ejabberd_http_client/models/srg_create_request'
require 'ejabberd_http_client/models/srg_delete_request'
require 'ejabberd_http_client/models/srg_get_info200_response_inner'
require 'ejabberd_http_client/models/srg_user_add_request'
require 'ejabberd_http_client/models/stop_kindly_request'
require 'ejabberd_http_client/models/subscribe_to_room_many_request'
require 'ejabberd_http_client/models/subscribe_to_room_many_request_users_inner'
require 'ejabberd_http_client/models/subscribe_to_room_request'
require 'ejabberd_http_client/models/table_mnesia_info_request'
require 'ejabberd_http_client/models/unban_ip200_response'
require 'ejabberd_http_client/models/unban_ip_request'
require 'ejabberd_http_client/models/unregister_muc_nick_request'
require 'ejabberd_http_client/models/unregister_user_request'
require 'ejabberd_http_client/models/unsubscribe_from_room_request'

# APIs
require 'ejabberd_http_client/api/accounts_api'
require 'ejabberd_http_client/api/acme_api'
require 'ejabberd_http_client/api/cluster_api'
require 'ejabberd_http_client/api/config_api'
require 'ejabberd_http_client/api/documentation_api'
require 'ejabberd_http_client/api/erlang_api'
require 'ejabberd_http_client/api/last_api'
require 'ejabberd_http_client/api/logs_api'
require 'ejabberd_http_client/api/mam_api'
require 'ejabberd_http_client/api/mnesia_api'
require 'ejabberd_http_client/api/modules_api'
require 'ejabberd_http_client/api/muc_api'
require 'ejabberd_http_client/api/muc_room_api'
require 'ejabberd_http_client/api/oauth_api'
require 'ejabberd_http_client/api/offline_api'
require 'ejabberd_http_client/api/private_api'
require 'ejabberd_http_client/api/purge_api'
require 'ejabberd_http_client/api/roster_api'
require 'ejabberd_http_client/api/s2s_api'
require 'ejabberd_http_client/api/server_api'
require 'ejabberd_http_client/api/session_api'
require 'ejabberd_http_client/api/shared_roster_group_api'
require 'ejabberd_http_client/api/sql_api'
require 'ejabberd_http_client/api/stanza_api'
require 'ejabberd_http_client/api/statistics_api'
require 'ejabberd_http_client/api/vcard_api'

module EjabberdHttpClient
  class << self
    # Customize default settings for the SDK using block.
    #   EjabberdHttpClient.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
